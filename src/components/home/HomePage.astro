---
import QuantumCircuitBuilder from "../QuantumCircuitBuilder.astro";
import { REPO_URL } from "../../config/site";
import type { Lang } from "../../config/i18n";
import type { HomeMessages } from "../../locales/home";

const {
  lang,
  messages,
  baseUrl,
}: {
  lang: Lang;
  messages: HomeMessages;
  baseUrl: string;
} = Astro.props;

const normalizedBase = baseUrl.endsWith("/") ? baseUrl : `${baseUrl}/`;
const docsHref = `${normalizedBase}docs/`;
const docsLangHref = `${normalizedBase}docs/${lang}/`;
const builderHeading = messages.builder?.heading || "Interactive Circuit";
---
<section class="hero">
  <h1>{messages.hero.title}</h1>
  <p>{messages.hero.subtitle}</p>
  <div class="actions">
    <a class="btn primary" href={docsLangHref}>{messages.hero.startLabel}</a>
    <a class="btn" href={REPO_URL} target="_blank" rel="noopener">{messages.hero.repoLabel}</a>
  </div>
</section>

<section class="features">
  {messages.features.map((feature) => (
    <div class="feature">
      <h3>{feature.title}</h3>
      <p>{feature.description}</p>
    </div>
  ))}
</section>

<section>
  <QuantumCircuitBuilder lang={lang} heading={builderHeading} />
</section>

<section>
  <h2>{messages.docs.heading}</h2>
  <p>
    {messages.docs.blurbBeforeLink}
    <a href={docsHref}>{messages.docs.linkLabel}</a>
    {messages.docs.blurbAfterLink}
  </p>
</section>

<style>
  .hero { padding: 6rem 0 3rem; text-align: center; }
  .hero h1 { font-size: clamp(2.5rem, 6vw, 4rem); line-height: 1.05; margin: 0 0 1rem; }
  .hero p { color: var(--mq-text-muted); font-size: 1.125rem; margin: 0 auto 1.5rem; max-width: 52ch; }
  .actions { display: flex; gap: .75rem; justify-content: center; }
  .btn { display: inline-block; padding: .625rem 1rem; border-radius: .5rem; border: 1px solid var(--mq-border); color: var(--mq-text); text-decoration: none; background: var(--mq-surface-2); }
  .btn.primary { background: var(--mq-primary); border-color: color-mix(in oklab, var(--mq-primary), black 10%); color: white; }
  .btn:hover { filter: brightness(1.05); }
  .features { display: grid; grid-template-columns: repeat(4, minmax(0,1fr)); gap: 1rem; margin: 2rem 0 3rem; }
  @media (max-width: 960px) { .features { grid-template-columns: 1fr; } }
  .feature { padding: 1rem; border: 1px solid var(--mq-border); border-radius: .75rem; background: var(--mq-surface-2); }
</style>
